# Day 3

```elixir
Mix.install([:kino])
```

## Input

```elixir
input = Kino.Input.textarea("Please put your data here")
```

```elixir
# input = """
# vJrwpWtwJgWrhcsFMMfFFhFp
# jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL
# PmmdzqPrVvPwwTWBwg
# wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn
# ttgJtRGJQctTZtZT
# CrZsJsPPZsGzwwsLwLmpwMDw
# """

input =
  input
  |> Kino.Input.read()
  |> String.split("\n", trim: true)
  |> Enum.map(&String.to_charlist/1)
```

## Part 1

```elixir
defmodule Rucksack do
  def score_rucksack(contents) do
    [c1, c2] = Enum.chunk_every(contents, div(length(contents), 2))

    c1
    |> Enum.reduce([], fn ci, acc ->
      if Enum.member?(c2, ci), do: [score_item(ci) | acc], else: acc
    end)
    |> Enum.uniq()
  end

  def find_badges([c1, c2, c3]) do
    c1
    |> Enum.reduce([], fn ci, acc ->
      if Enum.member?(c2, ci) && Enum.member?(c3, ci) do
        score_item(ci)
      else
        acc
      end
    end)
  end

  def score_item(item) do
    cond do
      Enum.member?(?a..?z, item) -> item - 96
      Enum.member?(?A..?Z, item) -> item - 38
      true -> 0
    end
  end
end
```

```elixir
import Rucksack

input
|> Enum.map(&score_rucksack/1)
|> List.flatten()
|> Enum.sum()
```

## Part 2

```elixir
input
|> Enum.chunk_every(3)
|> Enum.map(&find_badges/1)
|> Enum.sum()
```
